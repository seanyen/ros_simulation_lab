trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - docs/*

jobs:
- job: WindowsCI
  pool:
    name: Default
    demands:
    - Agent.OS -equals Windows_NT
  steps:
  - script: |
      @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command " [System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
  - script: |
      set PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin
      choco source add -n=ros-win -s="https://roswin.azurewebsites.net/api/v2" --priority=1
      choco install libjpeg-turbo --version=1.5.3.1809242322 -y
  - script: |
      git submodule update --init
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat" -arch=amd64 -host_arch=amd64
      call "c:\opt\ros\melodic\x64\setup.bat"
      pushd catkin_ws
      vcpkg install sdl2:x64-windows
      pip install circle-fit
      catkin_make --use-ninja -DCMAKE_BUILD_TYPE=Release
    displayName: Build ROS Workspace
  - script: |
      mkdir ros_home
      set ROS_HOME=%CD%\ros_home
      pushd catkin_ws
      call "c:\opt\ros\melodic\x64\setup.bat"
      call ".\devel\setup.bat"
      rosnode kill -a
      rostest demo demo.test
    displayName: Run ROS Tests
  - task: PublishPipelineArtifact@1
    inputs:
      path: $(System.DefaultWorkingDirectory)/ros_home
      artifact: Logs
    condition: always()
  - task: PublishTestResults@2
    inputs:
      testRunner: 'jUnit'
      testResultsFiles: '**\rostest-*.xml'
      searchFolder: $(System.DefaultWorkingDirectory)/ros_home
    condition: always()
- job: LinuxCI
  pool:
    name: Default
    demands:
    - Agent.OS -equals Linux
  steps:
  - checkout: self
    submodules: recursive
  - script: |
      pushd catkin_ws
      source /opt/ros/melodic/setup.sh
      sudo apt update
      rosdep update
      rosdep install --from-paths src --ignore-src -r -y
      apt install -y python-pip
      pip install circle-fit
      catkin_make
    displayName: Build ROS Workspace
  - script: |
      pushd catkin_ws
      source /opt/ros/melodic/setup.sh
      source devel/setup.sh
      chmod +x src/demo/nodes/demo.py
      rosnode kill -a
      rostest demo demo.test
    displayName: Run ROS Tests
